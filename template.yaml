AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  eventbridge-integration-solution-auth0-visualization

  (qs-1qpmal5d5)
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30

Metadata:
  AWS::ServerlessRepo::Application:
    Name: Amazon-EventBridge-Integration-Solution-Auth0-Visualization
    Description: This application demonstrates an integration with Auth0 for Amazon EventBridge SaaS Partner Integrations
    Author: AWS Quick Start
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['amazon', 'eventbridge', 'integration', 'solution', 'aws', 'lambda', 'auth0', 's3']
    HomePageUrl: https://github.com/aws-quickstart/eventbridge-integration-solution-auth0-visualization
    SemanticVersion: 0.1.4
    SourceCodeUrl: https://github.com/aws-quickstart/eventbridge-integration-solution-auth0-visualization
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Amazon EventBridge Integration Solution
      Parameters:
      - EventSourceName
    - Label:
        default: Amazon S3
      Parameters:
      - BucketName
    ParameterLabels:
      EventSourceName:
        default: Event Source Name
      BucketName:
        default: Bucket Name

Parameters:
  EventSourceName:
    Type: String
    AllowedPattern: aws\.partner(/[\.\-_A-Za-z0-9]+){2,}
    MinLength: 18
    MaxLength: 256
    Description: Name of the Auth0 Partner Event Source to associate with an Event Bus. For example, aws.partner/auth0.com/slug-uuid/auth0.logs
  BucketName:
    Type: String
    Default: ''
    AllowedPattern: '[a-zA-Z0-9.-]*'
    MaxLength: 63
    Description: Name of the Amazon S3 Bucket to create. Leave blank for an automatically generated name.

Conditions:
  AutoGenerateBucketName:
    !Equals [ !Ref BucketName, '' ]

Resources:
  EventBridgeEventBus:
    Type: AWS::Events::EventBus
    Properties:
      EventSourceName: !Ref EventSourceName
      Name: !Ref EventSourceName

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      BucketName:
        !If [ AutoGenerateBucketName, !Ref 'AWS::NoValue', !Ref BucketName ]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  EventBridgeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/saveAuth0EventToS3
      Handler: app.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Environment:
        Variables:
          AuthLogBucket: !Ref S3Bucket
      Policies:
      - S3WritePolicy:
          BucketName: !Ref S3Bucket
      Events:
        SuccessfulSignIn:
          Type: EventBridgeRule
          Properties:
            Pattern:
              account:
              - !Ref AWS::AccountId
              detail:
                data:
                  type:
                  - s
            EventBusName: !Ref EventBridgeEventBus
        SuccessfulSignUp:
          Type: EventBridgeRule
          Properties:
            Pattern:
              account:
              - !Ref AWS::AccountId
              detail:
                data:
                  type:
                  - ss
            EventBusName: !Ref EventBridgeEventBus
        SuccessfulSignOutSuccess:
          Type: EventBridgeRule
          Properties:
            Pattern:
              account:
              - !Ref AWS::AccountId
              detail:
                data:
                  type:
                  - slo
            EventBusName: !Ref EventBridgeEventBus
        SignInFail:
          Type: EventBridgeRule
          Properties:
            Pattern:
              account:
              - !Ref AWS::AccountId
              detail:
                data:
                  type:
                  - fp
                  - f
                  - fu
            EventBusName: !Ref EventBridgeEventBus

Outputs:
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#eventbridgerule
  EventBridgeEventBus:
    Description: "Event Bus Arn"
    Value: !GetAtt EventBridgeEventBus.Arn
  SuccessfulSignInRule:
    Description: "SuccessfulSignIn Rule ARN"
    Value: !GetAtt EventBridgeFunctionSuccessfulSignIn.Arn
  SuccessfulSignUpRule:
    Description: "SuccessfulSignUp Rule ARN"
    Value: !GetAtt EventBridgeFunctionSuccessfulSignUp.Arn
  SuccessfulSignOutSuccessRule:
    Description: "SuccessfulSignOutSucces Rule ARN"
    Value: !GetAtt EventBridgeFunctionSuccessfulSignOutSucces.Arn
  SignInFailRule:
    Description: "SignInFail Rule ARN"
    Value: !GetAtt EventBridgeFunctionSignInFail.Arn
  EventBridgeFunction:
    Description: "Lambda Function Arn"
    Value: !GetAtt EventBridgeFunction.Arn
  EventBridgeFunctionIamRole:
    Description: "Implicit IAM Role created for EventBridge function"
    Value: !GetAtt EventBridgeFunctionRole.Arn
  S3Bucket:
    Description: "S3 Bucket ARN"
    Value: !GetAtt S3Bucket.Arn
